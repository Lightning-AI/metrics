name: Compelex caching
description: some more compex caching

inputs:
  os:
    description: operation system
    required: true
  requires:
    description: define oldest or latest
    required: true
  python-version:
    description: Python version
    required: true

runs:
  using: "composite"
  steps:

  - name: PIP install assitant's deps
    run: pip install fire requests
    shell: bash

  - name: Set min. dependencies
    if: inputs.requires == 'oldest'
    run: python .github/assistant.py set-oldest-versions
    shell: bash

  - run: echo "::set-output name=period::$(python -c 'import time ; days = time.time() / 60 / 60 / 24 ; print(int(days / 7))' 2>&1)"
    if: inputs.requires == 'latest'
    id: times
    shell: bash

  # Note: This uses an internal pip API and may not always work
  # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
  - name: Get pip cache
    id: pip-cache
    run: python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"
    shell: bash

  - name: Cache pip
    uses: actions/cache@v2
    with:
      path: ${{ steps.pip-cache.outputs.dir }}
      key: ${{ inputs.os }}-py${{ inputs.python-version }}-td${{ steps.times.outputs.period }}-pip-${{ hashFiles('requirements.txt') }}
      restore-keys: ${{ inputs.os }}-py${{ inputs.python-version }}-td${{ steps.times.outputs.period }}-pip-

  - name: HF cache
    uses: actions/cache@v2
    with:
      path: ci-cache/huggingface/
      key: cache-transformers
