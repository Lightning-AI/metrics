[tool:pytest]
norecursedirs =
    .git
    .github
    dist
    build
doctest_plus = enabled
addopts =
    --strict
    --color=yes
    # TODO: remove when refactor is done
    --ignore=test/unittests/classification/test_accuracy.py
    --ignore=test/unittests/classification/test_auc.py
    --ignore=test/unittests/classification/test_auroc.py
    --ignore=test/unittests/classification/test_average_precision.py
    --ignore=test/unittests/classification/test_binned_precision_recall.py
    --ignore=test/unittests/classification/test_calibration_error.py
    --ignore=test/unittests/classification/test_cohen_kappa.py
    #--ignore=test/unittests/classification/test_confusion_matrix.py
    --ignore=test/unittests/classification/test_dice.py
    --ignore=test/unittests/classification/test_f_beta.py
    --ignore=test/unittests/classification/test_hamming_distance.py
    --ignore=test/unittests/classification/test_hinge.py
    #--ignore=test/unittests/classification/test_inputs.py
    --ignore=test/unittests/classification/test_jaccard.py
    --ignore=test/unittests/classification/test_kl_divergence.py
    --ignore=test/unittests/classification/test_matthews_corrcoef.py
    --ignore=test/unittests/classification/test_precision_recall_curve.py
    --ignore=test/unittests/classification/test_precision_recall.py
    --ignore=test/unittests/classification/test_ranking.py
    --ignore=test/unittests/classification/test_roc.py
    --ignore=test/unittests/classification/test_specificity.py
    #--ignore=test/unittests/classification/test_stat_scores.py

doctest_optionflags =
    NORMALIZE_WHITESPACE
    ELLIPSIS
    # FLOAT_CMP

[coverage:run]
parallel = True
concurrency = thread
relative_files = True

[coverage:report]
exclude_lines =
    pragma: no-cover
    pass


[flake8]
max-line-length = 120
exclude =
    *.egg
    build
    temp
select = E,W,F
doctests = True
verbose = 2
# https://pep8.readthedocs.io/en/latests/intro.html#error-codes
format = pylint
# see: https://www.flake8rules.com/
ignore =
    E731  # Do not assign a lambda expression, use a def
    E203  # whitespace before ':'


# setup.cfg or tox.ini
[check-manifest]
ignore =
    *.yml
    .github
    .github/*


[metadata]
license_file = LICENSE
description-file = README.md
# long_description = file:README.md
# long_description_content_type = text/markdown


[mypy]
# Typing tests is low priority, but enabling type checking on the
# untyped test functions (using `--check-untyped-defs`) is still
# high-value because it helps test the typing.
files = torchmetrics
disallow_untyped_defs = True
ignore_missing_imports = True
